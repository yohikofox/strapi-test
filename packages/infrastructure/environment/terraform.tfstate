{
  "version": 4,
  "terraform_version": "1.1.2",
  "serial": 10,
  "lineage": "1945187e-608d-b08b-bfca-fb9e6543351c",
  "outputs": {
    "cluster_url": {
      "value": "https://6b7592d5-47a5-4a2c-89cd-ad6ab90c55c7.api.k8s.fr-par.scw.cloud:6443",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "cert-manager",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "cert-manager",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "jetstack",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v1.8.0",
                "chart": "cert-manager",
                "name": "jetstack",
                "namespace": "cert-manager",
                "revision": 1,
                "values": "{\"installCRDs\":true}",
                "version": "v1.8.0"
              }
            ],
            "name": "jetstack",
            "namespace": "cert-manager",
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.jetstack.io",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "installCRDs",
                "type": "",
                "value": "true"
              }
            ],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "v1.8.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "null_resource.kubeconfig",
            "scaleway_k8s_cluster.k8s-cluster-hr4impact",
            "scaleway_k8s_pool.k8s-pool-hr4impact"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "ingress-traefik",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "traefik",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "ingress-traefik",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "2.7.0",
                "chart": "traefik",
                "name": "ingress-traefik",
                "namespace": "traefik-system",
                "revision": 1,
                "values": "{\"additionalArguments\":[\"--log.level=DEBUG\"],\"additionalVolumeMounts\":[],\"affinity\":{},\"autoscaling\":{\"enabled\":false},\"deployment\":{\"additionalContainers\":[],\"additionalVolumes\":[],\"annotations\":{},\"enabled\":true,\"imagePullSecrets\":[],\"initContainers\":[],\"kind\":\"Deployment\",\"labels\":{},\"minReadySeconds\":0,\"podAnnotations\":{},\"podLabels\":{},\"replicas\":1,\"shareProcessNamespace\":false,\"terminationGracePeriodSeconds\":60},\"env\":[],\"envFrom\":[],\"experimental\":{\"http3\":{\"enabled\":true},\"kubernetesGateway\":{\"enabled\":false},\"plugins\":{\"enabled\":false}},\"globalArguments\":[\"--global.checknewversion\",\"--global.sendanonymoususage\"],\"hostNetwork\":false,\"image\":{\"name\":\"traefik\",\"pullPolicy\":\"IfNotPresent\",\"tag\":\"\"},\"ingressClass\":{\"enabled\":false,\"fallbackApiVersion\":\"\",\"isDefaultClass\":false},\"ingressRoute\":{\"dashboard\":{\"annotations\":{},\"enabled\":true,\"labels\":{}}},\"livenessProbe\":{\"failureThreshold\":3,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":2},\"logs\":{\"access\":{\"enabled\":false,\"fields\":{\"general\":{\"defaultmode\":\"keep\",\"names\":{}},\"headers\":{\"defaultmode\":\"drop\",\"names\":{}}},\"filters\":{}},\"general\":{\"level\":\"DEBUG\"}},\"metrics\":{\"prometheus\":{\"entryPoint\":\"metrics\"}},\"nodeSelector\":{},\"persistence\":{\"accessMode\":\"ReadWriteOnce\",\"annotations\":{},\"enabled\":false,\"name\":\"data\",\"path\":\"/data\",\"size\":\"128Mi\"},\"pilot\":{\"enabled\":false,\"token\":\"\"},\"podDisruptionBudget\":{\"enabled\":false},\"podSecurityContext\":{\"fsGroup\":65532},\"podSecurityPolicy\":{\"enabled\":false},\"ports\":{\"metrics\":{\"expose\":false,\"exposedPort\":9100,\"port\":9100,\"protocol\":\"TCP\"},\"traefik\":{\"expose\":false,\"exposedPort\":9000,\"port\":9000,\"protocol\":\"TCP\"},\"web\":{\"expose\":true,\"exposedPort\":80,\"port\":8000,\"protocol\":\"TCP\"},\"websecure\":{\"expose\":true,\"exposedPort\":443,\"port\":8443,\"protocol\":\"TCP\",\"tls\":{\"certResolver\":\"\",\"domains\":[],\"enabled\":false,\"options\":\"\"}}},\"priorityClassName\":\"\",\"providers\":{\"kubernetesCRD\":{\"allowCrossNamespace\":false,\"allowExternalNameServices\":false,\"enabled\":true,\"namespaces\":[]},\"kubernetesIngress\":{\"allowEmptyServices\":false,\"allowExternalNameServices\":false,\"enabled\":true,\"namespaces\":[],\"publishedService\":{\"enabled\":false}}},\"rbac\":{\"enabled\":true,\"namespaced\":false},\"readinessProbe\":{\"failureThreshold\":1,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":2},\"resources\":{},\"rollingUpdate\":{\"maxSurge\":1,\"maxUnavailable\":1},\"securityContext\":{\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsGroup\":65532,\"runAsNonRoot\":true,\"runAsUser\":65532},\"service\":{\"annotations\":{},\"annotationsTCP\":{},\"annotationsUDP\":{},\"enabled\":true,\"externalIPs\":[],\"labels\":{},\"loadBalancerSourceRanges\":[],\"spec\":{},\"type\":\"LoadBalancer\"},\"serviceAccount\":{\"name\":\"\"},\"serviceAccountAnnotations\":{},\"tlsOptions\":{},\"tolerations\":[],\"tracing\":{},\"volumes\":[]}",
                "version": "10.20.1"
              }
            ],
            "name": "ingress-traefik",
            "namespace": "traefik-system",
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://helm.traefik.io/traefik",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "# Default values for Traefik\r\nimage:\r\n  name: traefik\r\n  # defaults to appVersion\r\n  tag: \"\"\r\n  pullPolicy: IfNotPresent\r\n\r\n#\r\n# Configure the deployment\r\n#\r\ndeployment:\r\n  enabled: true\r\n  # Can be either Deployment or DaemonSet\r\n  kind: Deployment\r\n  # Number of pods of the deployment (only applies when kind == Deployment)\r\n  replicas: 1\r\n  # Amount of time (in seconds) before Kubernetes will send the SIGKILL signal if Traefik does not shut down\r\n  terminationGracePeriodSeconds: 60\r\n  # The minimum number of seconds Traefik needs to be up and running before the DaemonSet/Deployment controller considers it available\r\n  minReadySeconds: 0\r\n  # Additional deployment annotations (e.g. for jaeger-operator sidecar injection)\r\n  annotations: {}\r\n  # Additional deployment labels (e.g. for filtering deployment by custom labels)\r\n  labels: {}\r\n  # Additional pod annotations (e.g. for mesh injection or prometheus scraping)\r\n  podAnnotations: {}\r\n  # Additional Pod labels (e.g. for filtering Pod by custom labels)\r\n  podLabels: {}\r\n  # Additional containers (e.g. for metric offloading sidecars)\r\n  additionalContainers: []\r\n    # https://docs.datadoghq.com/developers/dogstatsd/unix_socket/?tab=host\r\n    # - name: socat-proxy\r\n    # image: alpine/socat:1.0.5\r\n    # args: [\"-s\", \"-u\", \"udp-recv:8125\", \"unix-sendto:/socket/socket\"]\r\n    # volumeMounts:\r\n    #   - name: dsdsocket\r\n    #     mountPath: /socket\r\n  # Additional volumes available for use with initContainers and additionalContainers\r\n  additionalVolumes: []\r\n    # - name: dsdsocket\r\n    #   hostPath:\r\n    #     path: /var/run/statsd-exporter\r\n  # Additional initContainers (e.g. for setting file permission as shown below)\r\n  initContainers: []\r\n    # The \"volume-permissions\" init container is required if you run into permission issues.\r\n    # Related issue: https://github.com/traefik/traefik/issues/6972\r\n    # - name: volume-permissions\r\n    #   image: busybox:1.31.1\r\n    #   command: [\"sh\", \"-c\", \"chmod -Rv 600 /data/*\"]\r\n    #   volumeMounts:\r\n    #     - name: data\r\n    #       mountPath: /data\r\n  # Use process namespace sharing\r\n  shareProcessNamespace: false\r\n  # Custom pod DNS policy. Apply if `hostNetwork: true`\r\n  # dnsPolicy: ClusterFirstWithHostNet\r\n  # Additional imagePullSecrets\r\n  imagePullSecrets: []\r\n    # - name: myRegistryKeySecretName\r\n\r\n# Pod disruption budget\r\npodDisruptionBudget:\r\n  enabled: false\r\n  # maxUnavailable: 1\r\n  # maxUnavailable: 33%\r\n  # minAvailable: 0\r\n  # minAvailable: 25%\r\n\r\n# Use ingressClass. Ignored if Traefik version \u003c 2.3 / kubernetes \u003c 1.18.x\r\ningressClass:\r\n  # true is not unit-testable yet, pending https://github.com/rancher/helm-unittest/pull/12\r\n  enabled: false\r\n  isDefaultClass: false\r\n  # Use to force a networking.k8s.io API Version for certain CI/CD applications. E.g. \"v1beta1\"\r\n  fallbackApiVersion: \"\"\r\n\r\n# Activate Pilot integration\r\npilot:\r\n  enabled: false\r\n  token: \"\"\r\n  # Toggle Pilot Dashboard\r\n  # dashboard: false\r\n\r\n# Enable experimental features\r\nexperimental:\r\n  http3:\r\n    enabled: true\r\n  plugins:\r\n    enabled: false\r\n  kubernetesGateway:\r\n    enabled: false\r\n    # certificate:\r\n    #   group: \"core\"\r\n    #   kind: \"Secret\"\r\n    #   name: \"mysecret\"\r\n    # By default, Gateway would be created to the Namespace you are deploying Traefik to.\r\n    # You may create that Gateway in another namespace, setting its name below:\r\n    # namespace: default\r\n\r\n# Create an IngressRoute for the dashboard\r\ningressRoute:\r\n  dashboard:\r\n    enabled: true\r\n    # Additional ingressRoute annotations (e.g. for kubernetes.io/ingress.class)\r\n    annotations: {}\r\n    # Additional ingressRoute labels (e.g. for filtering IngressRoute by custom labels)\r\n    labels: {}\r\n\r\nrollingUpdate:\r\n  maxUnavailable: 1\r\n  maxSurge: 1\r\n\r\n# Customize liveness and readiness probe values.\r\nreadinessProbe:\r\n  failureThreshold: 1\r\n  initialDelaySeconds: 10\r\n  periodSeconds: 10\r\n  successThreshold: 1\r\n  timeoutSeconds: 2\r\n\r\nlivenessProbe:\r\n  failureThreshold: 3\r\n  initialDelaySeconds: 10\r\n  periodSeconds: 10\r\n  successThreshold: 1\r\n  timeoutSeconds: 2\r\n\r\n#\r\n# Configure providers\r\n#\r\nproviders:\r\n  kubernetesCRD:\r\n    enabled: true\r\n    allowCrossNamespace: false\r\n    allowExternalNameServices: false\r\n    # ingressClass: traefik-internal\r\n    # labelSelector: environment=production,method=traefik\r\n    namespaces: []\r\n      # - \"default\"\r\n\r\n  kubernetesIngress:\r\n    enabled: true\r\n    allowExternalNameServices: false\r\n    allowEmptyServices: false\r\n    # ingressClass: traefik-internal\r\n    # labelSelector: environment=production,method=traefik\r\n    namespaces: []\r\n      # - \"default\"\r\n    # IP used for Kubernetes Ingress endpoints\r\n    publishedService:\r\n      enabled: false\r\n      # Published Kubernetes Service to copy status from. Format: namespace/servicename\r\n      # By default this Traefik service\r\n      # pathOverride: \"\"\r\n\r\n#\r\n# Add volumes to the traefik pod. The volume name will be passed to tpl.\r\n# This can be used to mount a cert pair or a configmap that holds a config.toml file.\r\n# After the volume has been mounted, add the configs into traefik by using the `additionalArguments` list below, eg:\r\n# additionalArguments:\r\n# - \"--providers.file.filename=/config/dynamic.toml\"\r\n# - \"--ping\"\r\n# - \"--ping.entrypoint=web\"\r\nvolumes: []\r\n# - name: public-cert\r\n#   mountPath: \"/certs\"\r\n#   type: secret\r\n# - name: '{{ printf \"%s-configs\" .Release.Name }}'\r\n#   mountPath: \"/config\"\r\n#   type: configMap\r\n\r\n# Additional volumeMounts to add to the Traefik container\r\nadditionalVolumeMounts: []\r\n  # For instance when using a logshipper for access logs\r\n  # - name: traefik-logs\r\n  #   mountPath: /var/log/traefik\r\n\r\n# Logs\r\n# https://docs.traefik.io/observability/logs/\r\nlogs:\r\n  # Traefik logs concern everything that happens to Traefik itself (startup, configuration, events, shutdown, and so on).\r\n  general:\r\n    # By default, the logs use a text format (common), but you can\r\n    # also ask for the json format in the format option\r\n    # format: json\r\n    # By default, the level is set to ERROR. Alternative logging levels are DEBUG, PANIC, FATAL, ERROR, WARN, and INFO.\r\n    level: DEBUG\r\n  access:\r\n    # To enable access logs\r\n    enabled: false\r\n    # By default, logs are written using the Common Log Format (CLF).\r\n    # To write logs in JSON, use json in the format option.\r\n    # If the given format is unsupported, the default (CLF) is used instead.\r\n    # format: json\r\n    # To write the logs in an asynchronous fashion, specify a bufferingSize option.\r\n    # This option represents the number of log lines Traefik will keep in memory before writing\r\n    # them to the selected output. In some cases, this option can greatly help performances.\r\n    # bufferingSize: 100\r\n    # Filtering https://docs.traefik.io/observability/access-logs/#filtering\r\n    filters: {}\r\n      # statuscodes: \"200,300-302\"\r\n      # retryattempts: true\r\n      # minduration: 10ms\r\n    # Fields\r\n    # https://docs.traefik.io/observability/access-logs/#limiting-the-fieldsincluding-headers\r\n    fields:\r\n      general:\r\n        defaultmode: keep\r\n        names: {}\r\n          # Examples:\r\n          # ClientUsername: drop\r\n      headers:\r\n        defaultmode: drop\r\n        names: {}\r\n          # Examples:\r\n          # User-Agent: redact\r\n          # Authorization: drop\r\n          # Content-Type: keep\r\n\r\nmetrics:\r\n  # datadog:\r\n  #   address: 127.0.0.1:8125\r\n  # influxdb:\r\n  #   address: localhost:8089\r\n  #   protocol: udp\r\n  prometheus:\r\n    entryPoint: metrics\r\n  #  addRoutersLabels: true\r\n  # statsd:\r\n  #   address: localhost:8125\r\n\r\ntracing: {}\r\n  # instana:\r\n  #   enabled: true\r\n  # datadog:\r\n  #   localAgentHostPort: 127.0.0.1:8126\r\n  #   debug: false\r\n  #   globalTag: \"\"\r\n  #   prioritySampling: false\r\n\r\nglobalArguments:\r\n  - \"--global.checknewversion\"\r\n  - \"--global.sendanonymoususage\"\r\n\r\n#\r\n# Configure Traefik static configuration\r\n# Additional arguments to be passed at Traefik's binary\r\n# All available options available on https://docs.traefik.io/reference/static-configuration/cli/\r\n## Use curly braces to pass values: `helm install --set=\"additionalArguments={--providers.kubernetesingress.ingressclass=traefik-internal,--log.level=DEBUG}\"`\r\nadditionalArguments: \r\n#  - \"--providers.kubernetesingress.ingressclass=traefik-internal\"\r\n - \"--log.level=DEBUG\"\r\n\r\n# Environment variables to be passed to Traefik's binary\r\nenv: []\r\n# - name: SOME_VAR\r\n#   value: some-var-value\r\n# - name: SOME_VAR_FROM_CONFIG_MAP\r\n#   valueFrom:\r\n#     configMapRef:\r\n#       name: configmap-name\r\n#       key: config-key\r\n# - name: SOME_SECRET\r\n#   valueFrom:\r\n#     secretKeyRef:\r\n#       name: secret-name\r\n#       key: secret-key\r\n\r\nenvFrom: []\r\n# - configMapRef:\r\n#     name: config-map-name\r\n# - secretRef:\r\n#     name: secret-name\r\n\r\n# Configure ports\r\nports:\r\n  # The name of this one can't be changed as it is used for the readiness and\r\n  # liveness probes, but you can adjust its config to your liking\r\n  traefik:\r\n    port: 9000\r\n    # Use hostPort if set.\r\n    # hostPort: 9000\r\n    #\r\n    # Use hostIP if set. If not set, Kubernetes will default to 0.0.0.0, which\r\n    # means it's listening on all your interfaces and all your IPs. You may want\r\n    # to set this value if you need traefik to listen on specific interface\r\n    # only.\r\n    # hostIP: 192.168.100.10\r\n\r\n    # Override the liveness/readiness port. This is useful to integrate traefik\r\n    # with an external Load Balancer that performs healthchecks.\r\n    # healthchecksPort: 9000\r\n\r\n    # Defines whether the port is exposed if service.type is LoadBalancer or\r\n    # NodePort.\r\n    #\r\n    # You SHOULD NOT expose the traefik port on production deployments.\r\n    # If you want to access it from outside of your cluster,\r\n    # use `kubectl port-forward` or create a secure ingress\r\n    expose: false\r\n    # The exposed port for this service\r\n    exposedPort: 9000\r\n    # The port protocol (TCP/UDP)\r\n    protocol: TCP\r\n  web:\r\n    port: 8000\r\n    # hostPort: 8000\r\n    expose: true\r\n    exposedPort: 80\r\n    # The port protocol (TCP/UDP)\r\n    protocol: TCP\r\n    # Use nodeport if set. This is useful if you have configured Traefik in a\r\n    # LoadBalancer\r\n    # nodePort: 32080\r\n    # Port Redirections\r\n    # Added in 2.2, you can make permanent redirects via entrypoints.\r\n    # https://docs.traefik.io/routing/entrypoints/#redirection\r\n    # redirectTo: websecure\r\n  websecure:\r\n    port: 8443\r\n    # hostPort: 8443\r\n    expose: true\r\n    exposedPort: 443\r\n    # The port protocol (TCP/UDP)\r\n    protocol: TCP\r\n    # nodePort: 32443\r\n    # Enable HTTP/3.\r\n    # Requires enabling experimental http3 feature and tls.\r\n    # Note that you cannot have a UDP entrypoint with the same port.\r\n    # http3: true\r\n    # Set TLS at the entrypoint\r\n    # https://doc.traefik.io/traefik/routing/entrypoints/#tls\r\n    tls:\r\n      enabled: false\r\n      # this is the name of a TLSOption definition\r\n      options: \"\"\r\n      certResolver: \"\"\r\n      domains: []\r\n      # - main: example.com\r\n      #   sans:\r\n      #     - foo.example.com\r\n      #     - bar.example.com\r\n  metrics:\r\n    port: 9100\r\n    # hostPort: 9100\r\n    # Defines whether the port is exposed if service.type is LoadBalancer or\r\n    # NodePort.\r\n    #\r\n    # You may not want to expose the metrics port on production deployments.\r\n    # If you want to access it from outside of your cluster,\r\n    # use `kubectl port-forward` or create a secure ingress\r\n    expose: false\r\n    # The exposed port for this service\r\n    exposedPort: 9100\r\n    # The port protocol (TCP/UDP)\r\n    protocol: TCP\r\n\r\n# TLS Options are created as TLSOption CRDs\r\n# https://doc.traefik.io/traefik/https/tls/#tls-options\r\n# Example:\r\n# tlsOptions:\r\n#   default:\r\n#     sniStrict: true\r\n#     preferServerCipherSuites: true\r\n#   foobar:\r\n#     curvePreferences:\r\n#       - CurveP521\r\n#       - CurveP384\r\ntlsOptions: {}\r\n\r\n# Options for the main traefik service, where the entrypoints traffic comes\r\n# from.\r\nservice:\r\n  enabled: true\r\n  type: LoadBalancer\r\n  # Additional annotations applied to both TCP and UDP services (e.g. for cloud provider specific config)\r\n  annotations: {}\r\n  # Additional annotations for TCP service only\r\n  annotationsTCP: {}\r\n  # Additional annotations for UDP service only\r\n  annotationsUDP: {}\r\n  # Additional service labels (e.g. for filtering Service by custom labels)\r\n  labels: {}\r\n  # Additional entries here will be added to the service spec.\r\n  # Cannot contain type, selector or ports entries.\r\n  spec: {}\r\n    # externalTrafficPolicy: Cluster\r\n    # loadBalancerIP: \"1.2.3.4\"\r\n    # clusterIP: \"2.3.4.5\"\r\n  loadBalancerSourceRanges: []\r\n    # - 192.168.0.1/32\r\n    # - 172.16.0.0/16\r\n  externalIPs: []\r\n    # - 1.2.3.4\r\n  # One of SingleStack, PreferDualStack, or RequireDualStack.\r\n  # ipFamilyPolicy: SingleStack\r\n  # List of IP families (e.g. IPv4 and/or IPv6).\r\n  # ref: https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services\r\n  # ipFamilies:\r\n  #   - IPv4\r\n  #   - IPv6\r\n\r\n## Create HorizontalPodAutoscaler object.\r\n##\r\nautoscaling:\r\n  enabled: false\r\n#   minReplicas: 1\r\n#   maxReplicas: 10\r\n#   metrics:\r\n#   - type: Resource\r\n#     resource:\r\n#       name: cpu\r\n#       targetAverageUtilization: 60\r\n#   - type: Resource\r\n#     resource:\r\n#       name: memory\r\n#       targetAverageUtilization: 60\r\n\r\n# Enable persistence using Persistent Volume Claims\r\n# ref: http://kubernetes.io/docs/user-guide/persistent-volumes/\r\n# After the pvc has been mounted, add the configs into traefik by using the `additionalArguments` list below, eg:\r\n# additionalArguments:\r\n# - \"--certificatesresolvers.le.acme.storage=/data/acme.json\"\r\n# It will persist TLS certificates.\r\npersistence:\r\n  enabled: false\r\n  name: data\r\n#  existingClaim: \"\"\r\n  accessMode: ReadWriteOnce\r\n  size: 128Mi\r\n  # storageClass: \"\"\r\n  path: /data\r\n  annotations: {}\r\n  # subPath: \"\" # only mount a subpath of the Volume into the pod\r\n\r\n# If hostNetwork is true, runs traefik in the host network namespace\r\n# To prevent unschedulabel pods due to port collisions, if hostNetwork=true\r\n# and replicas\u003e1, a pod anti-affinity is recommended and will be set if the\r\n# affinity is left as default.\r\nhostNetwork: false\r\n\r\n# Whether Role Based Access Control objects like roles and rolebindings should be created\r\nrbac:\r\n  enabled: true\r\n\r\n  # If set to false, installs ClusterRole and ClusterRoleBinding so Traefik can be used across namespaces.\r\n  # If set to true, installs namespace-specific Role and RoleBinding and requires provider configuration be set to that same namespace\r\n  namespaced: false\r\n\r\n# Enable to create a PodSecurityPolicy and assign it to the Service Account via RoleBinding or ClusterRoleBinding\r\npodSecurityPolicy:\r\n  enabled: false\r\n\r\n# The service account the pods will use to interact with the Kubernetes API\r\nserviceAccount:\r\n  # If set, an existing service account is used\r\n  # If not set, a service account is created automatically using the fullname template\r\n  name: \"\"\r\n\r\n# Additional serviceAccount annotations (e.g. for oidc authentication)\r\nserviceAccountAnnotations: {}\r\n\r\nresources: {}\r\n  # requests:\r\n  #   cpu: \"100m\"\r\n  #   memory: \"50Mi\"\r\n  # limits:\r\n  #   cpu: \"300m\"\r\n  #   memory: \"150Mi\"\r\naffinity: {}\r\n# # This example pod anti-affinity forces the scheduler to put traefik pods\r\n# # on nodes where no other traefik pods are scheduled.\r\n# # It should be used when hostNetwork: true to prevent port conflicts\r\n#   podAntiAffinity:\r\n#     requiredDuringSchedulingIgnoredDuringExecution:\r\n#       - labelSelector:\r\n#           matchExpressions:\r\n#             - key: app.kubernetes.io/name\r\n#               operator: In\r\n#               values:\r\n#                 - {{ template \"traefik.name\" . }}\r\n#         topologyKey: kubernetes.io/hostname\r\nnodeSelector: {}\r\ntolerations: []\r\n\r\n# Pods can have priority.\r\n# Priority indicates the importance of a Pod relative to other Pods.\r\npriorityClassName: \"\"\r\n\r\n# Set the container security context\r\n# To run the container with ports below 1024 this will need to be adjust to run as root\r\nsecurityContext:\r\n  capabilities:\r\n    drop: [ALL]\r\n  readOnlyRootFilesystem: true\r\n  runAsGroup: 65532\r\n  runAsNonRoot: true\r\n  runAsUser: 65532\r\n\r\npodSecurityContext:\r\n  fsGroup: 65532"
            ],
            "verify": false,
            "version": "10.20.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "null_resource.kubeconfig",
            "scaleway_k8s_cluster.k8s-cluster-hr4impact",
            "scaleway_k8s_pool.k8s-pool-hr4impact"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "traefik_system",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "traefik-system",
            "metadata": [
              {
                "annotations": {
                  "name": "traefik-system"
                },
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "traefik-system",
                "resource_version": "20780793146",
                "uid": "414ee27d-8aee-43cc-8b63-b847b383ec0b"
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "null_resource.kubeconfig",
            "scaleway_k8s_cluster.k8s-cluster-hr4impact",
            "scaleway_k8s_pool.k8s-pool-hr4impact"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "kubeconfig",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: v1\nclusters:\n- name: \"k8s-cluster-dev-hr4impact\"\n  cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EWXdOekV4TXpRME0xb1hEVE15TURZd056RXhNelEwTTFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTzIyCkUwZ1ZIcGJUVzcrOEM2VTM1VWtjQVhVK0VPR0RNTW5vRUJJMTdQeTB4cXhRRGt0U1dyOW0ydnRkTlZaaWRQNWcKSzNIRTBkb1QwRFNvS0tNUmhIcmVvbGFRYXRuNkIxc3FIekhmRmt5dGN6QWcydmc4Vm9zOTVxZm9ENFk5SVI3SwpJcTl1WENCN29PbGROUmdyTVNWbEhqWDg3NHp1d214a1E3Wmh0NXFvWmRwTUlLaFRxQk5LNlRSUi9yazZiNmxGCmNUZmtZUVhyVkl6Si9OT2xDa2lidDBETUpIcTYrRFFGV2JiK2l0MXlrdm9LRUt0ZjVxUDZhSm5BUmc1cGFmWEEKYk9YZEc4eXZWdG8vSXY3Uk9yOXExV2RLVzlKNlE5cndPb0YwazVpZlhmdm84ckNsN3E4eGN0Qk5JVVlQNmlqTwoxZHlsblJLODBwdWxnWjN5WVhVQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZCak90Sm1RTzhSQkljMW44bzBQaW5xd2Q0WS9NQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCQWt0QTU4WWxrM0R2R0dlN1QrUnNzelRxWU81VTdUelNOcVdEVlpQeW56Y1FwU29nNQpOaUpWYWN6VUpEMFN4S1Y4enZhQzR1dDZQRU1UVHJ4RTNjY3JSeEkzdFRucGV2R25jV212QmY2ODduellUR0ZtCjBrVTd4TTY5NEgrT29KYVQ5Z2hDd2w1cGhOb3BYb2NEMTU3SkdCWUY1eFVVRk9tRFZXVjZPc0x4Z3JqQVZCSXkKWm5nMU53R3hhSXVLT3d5cVFzZEY1NjJTZ29LRkNZWlpqejJ5UnhOOHhZSEliN3pMWldyc2I3ZG9iVG1VZ1pmMAp5dlhmTjFrcTJmaFlUS1pyOUl6L0dhR1pOYm4ySTJXYUtDcHdkS1hsWUxBN2V2THlvenVjNWg3QnMxQUhJYTNWCm8rYWdxNjM0RTlXTVZCcnB2UmNQWXJhaFFaZ2k5aG9mRlNxNwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    server: https://6b7592d5-47a5-4a2c-89cd-ad6ab90c55c7.api.k8s.fr-par.scw.cloud:6443\ncontexts:\n- name: admin@k8s-cluster-dev-hr4impact\n  context:\n    cluster: \"k8s-cluster-dev-hr4impact\"\n    user: k8s-cluster-dev-hr4impact-admin\ncurrent-context: admin@k8s-cluster-dev-hr4impact\nkind: Config\npreferences: {}\nusers:\n- name: k8s-cluster-dev-hr4impact-admin\n  user:\n    token: jpP4k3gVS3f9F0gfnl8aagoSZRxqylVDOqxoHAWQdE6MABBCqNBZB9u3",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./kubeconfig",
            "id": "27ae6e37c8c414e29ffb8d051cdc689854854c8e",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "scaleway_k8s_cluster.k8s-cluster-hr4impact"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "kubeconfig",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2140574891967489586",
            "triggers": {
              "cluster_ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EWXdOekV4TXpRME0xb1hEVE15TURZd056RXhNelEwTTFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTzIyCkUwZ1ZIcGJUVzcrOEM2VTM1VWtjQVhVK0VPR0RNTW5vRUJJMTdQeTB4cXhRRGt0U1dyOW0ydnRkTlZaaWRQNWcKSzNIRTBkb1QwRFNvS0tNUmhIcmVvbGFRYXRuNkIxc3FIekhmRmt5dGN6QWcydmc4Vm9zOTVxZm9ENFk5SVI3SwpJcTl1WENCN29PbGROUmdyTVNWbEhqWDg3NHp1d214a1E3Wmh0NXFvWmRwTUlLaFRxQk5LNlRSUi9yazZiNmxGCmNUZmtZUVhyVkl6Si9OT2xDa2lidDBETUpIcTYrRFFGV2JiK2l0MXlrdm9LRUt0ZjVxUDZhSm5BUmc1cGFmWEEKYk9YZEc4eXZWdG8vSXY3Uk9yOXExV2RLVzlKNlE5cndPb0YwazVpZlhmdm84ckNsN3E4eGN0Qk5JVVlQNmlqTwoxZHlsblJLODBwdWxnWjN5WVhVQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZCak90Sm1RTzhSQkljMW44bzBQaW5xd2Q0WS9NQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCQWt0QTU4WWxrM0R2R0dlN1QrUnNzelRxWU81VTdUelNOcVdEVlpQeW56Y1FwU29nNQpOaUpWYWN6VUpEMFN4S1Y4enZhQzR1dDZQRU1UVHJ4RTNjY3JSeEkzdFRucGV2R25jV212QmY2ODduellUR0ZtCjBrVTd4TTY5NEgrT29KYVQ5Z2hDd2w1cGhOb3BYb2NEMTU3SkdCWUY1eFVVRk9tRFZXVjZPc0x4Z3JqQVZCSXkKWm5nMU53R3hhSXVLT3d5cVFzZEY1NjJTZ29LRkNZWlpqejJ5UnhOOHhZSEliN3pMWldyc2I3ZG9iVG1VZ1pmMAp5dlhmTjFrcTJmaFlUS1pyOUl6L0dhR1pOYm4ySTJXYUtDcHdkS1hsWUxBN2V2THlvenVjNWg3QnMxQUhJYTNWCm8rYWdxNjM0RTlXTVZCcnB2UmNQWXJhaFFaZ2k5aG9mRlNxNwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
              "host": "https://6b7592d5-47a5-4a2c-89cd-ad6ab90c55c7.api.k8s.fr-par.scw.cloud:6443",
              "token": "jpP4k3gVS3f9F0gfnl8aagoSZRxqylVDOqxoHAWQdE6MABBCqNBZB9u3"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "scaleway_k8s_cluster.k8s-cluster-hr4impact",
            "scaleway_k8s_pool.k8s-pool-hr4impact"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "scaleway_k8s_cluster",
      "name": "k8s-cluster-hr4impact",
      "provider": "provider[\"registry.terraform.io/scaleway/scaleway\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "admission_plugins": [],
            "apiserver_cert_sans": [],
            "apiserver_url": "https://6b7592d5-47a5-4a2c-89cd-ad6ab90c55c7.api.k8s.fr-par.scw.cloud:6443",
            "auto_upgrade": [
              {
                "enable": false,
                "maintenance_window_day": "any",
                "maintenance_window_start_hour": 0
              }
            ],
            "autoscaler_config": [
              {
                "balance_similar_node_groups": true,
                "disable_scale_down": false,
                "estimator": "binpacking",
                "expander": "random",
                "expendable_pods_priority_cutoff": -5,
                "ignore_daemonsets_utilization": true,
                "max_graceful_termination_sec": 600,
                "scale_down_delay_after_add": "5m",
                "scale_down_unneeded_time": "10m",
                "scale_down_utilization_threshold": 0.5
              }
            ],
            "cni": "calico",
            "created_at": "2022-06-08T11:34:42Z",
            "delete_additional_resources": false,
            "description": "K8S Cluster Hr4impact dev",
            "feature_gates": [],
            "id": "fr-par/6b7592d5-47a5-4a2c-89cd-ad6ab90c55c7",
            "kubeconfig": [
              {
                "cluster_ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EWXdOekV4TXpRME0xb1hEVE15TURZd056RXhNelEwTTFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTzIyCkUwZ1ZIcGJUVzcrOEM2VTM1VWtjQVhVK0VPR0RNTW5vRUJJMTdQeTB4cXhRRGt0U1dyOW0ydnRkTlZaaWRQNWcKSzNIRTBkb1QwRFNvS0tNUmhIcmVvbGFRYXRuNkIxc3FIekhmRmt5dGN6QWcydmc4Vm9zOTVxZm9ENFk5SVI3SwpJcTl1WENCN29PbGROUmdyTVNWbEhqWDg3NHp1d214a1E3Wmh0NXFvWmRwTUlLaFRxQk5LNlRSUi9yazZiNmxGCmNUZmtZUVhyVkl6Si9OT2xDa2lidDBETUpIcTYrRFFGV2JiK2l0MXlrdm9LRUt0ZjVxUDZhSm5BUmc1cGFmWEEKYk9YZEc4eXZWdG8vSXY3Uk9yOXExV2RLVzlKNlE5cndPb0YwazVpZlhmdm84ckNsN3E4eGN0Qk5JVVlQNmlqTwoxZHlsblJLODBwdWxnWjN5WVhVQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZCak90Sm1RTzhSQkljMW44bzBQaW5xd2Q0WS9NQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCQWt0QTU4WWxrM0R2R0dlN1QrUnNzelRxWU81VTdUelNOcVdEVlpQeW56Y1FwU29nNQpOaUpWYWN6VUpEMFN4S1Y4enZhQzR1dDZQRU1UVHJ4RTNjY3JSeEkzdFRucGV2R25jV212QmY2ODduellUR0ZtCjBrVTd4TTY5NEgrT29KYVQ5Z2hDd2w1cGhOb3BYb2NEMTU3SkdCWUY1eFVVRk9tRFZXVjZPc0x4Z3JqQVZCSXkKWm5nMU53R3hhSXVLT3d5cVFzZEY1NjJTZ29LRkNZWlpqejJ5UnhOOHhZSEliN3pMWldyc2I3ZG9iVG1VZ1pmMAp5dlhmTjFrcTJmaFlUS1pyOUl6L0dhR1pOYm4ySTJXYUtDcHdkS1hsWUxBN2V2THlvenVjNWg3QnMxQUhJYTNWCm8rYWdxNjM0RTlXTVZCcnB2UmNQWXJhaFFaZ2k5aG9mRlNxNwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                "config_file": "apiVersion: v1\nclusters:\n- name: \"k8s-cluster-dev-hr4impact\"\n  cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EWXdOekV4TXpRME0xb1hEVE15TURZd056RXhNelEwTTFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTzIyCkUwZ1ZIcGJUVzcrOEM2VTM1VWtjQVhVK0VPR0RNTW5vRUJJMTdQeTB4cXhRRGt0U1dyOW0ydnRkTlZaaWRQNWcKSzNIRTBkb1QwRFNvS0tNUmhIcmVvbGFRYXRuNkIxc3FIekhmRmt5dGN6QWcydmc4Vm9zOTVxZm9ENFk5SVI3SwpJcTl1WENCN29PbGROUmdyTVNWbEhqWDg3NHp1d214a1E3Wmh0NXFvWmRwTUlLaFRxQk5LNlRSUi9yazZiNmxGCmNUZmtZUVhyVkl6Si9OT2xDa2lidDBETUpIcTYrRFFGV2JiK2l0MXlrdm9LRUt0ZjVxUDZhSm5BUmc1cGFmWEEKYk9YZEc4eXZWdG8vSXY3Uk9yOXExV2RLVzlKNlE5cndPb0YwazVpZlhmdm84ckNsN3E4eGN0Qk5JVVlQNmlqTwoxZHlsblJLODBwdWxnWjN5WVhVQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZCak90Sm1RTzhSQkljMW44bzBQaW5xd2Q0WS9NQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCQWt0QTU4WWxrM0R2R0dlN1QrUnNzelRxWU81VTdUelNOcVdEVlpQeW56Y1FwU29nNQpOaUpWYWN6VUpEMFN4S1Y4enZhQzR1dDZQRU1UVHJ4RTNjY3JSeEkzdFRucGV2R25jV212QmY2ODduellUR0ZtCjBrVTd4TTY5NEgrT29KYVQ5Z2hDd2w1cGhOb3BYb2NEMTU3SkdCWUY1eFVVRk9tRFZXVjZPc0x4Z3JqQVZCSXkKWm5nMU53R3hhSXVLT3d5cVFzZEY1NjJTZ29LRkNZWlpqejJ5UnhOOHhZSEliN3pMWldyc2I3ZG9iVG1VZ1pmMAp5dlhmTjFrcTJmaFlUS1pyOUl6L0dhR1pOYm4ySTJXYUtDcHdkS1hsWUxBN2V2THlvenVjNWg3QnMxQUhJYTNWCm8rYWdxNjM0RTlXTVZCcnB2UmNQWXJhaFFaZ2k5aG9mRlNxNwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    server: https://6b7592d5-47a5-4a2c-89cd-ad6ab90c55c7.api.k8s.fr-par.scw.cloud:6443\ncontexts:\n- name: admin@k8s-cluster-dev-hr4impact\n  context:\n    cluster: \"k8s-cluster-dev-hr4impact\"\n    user: k8s-cluster-dev-hr4impact-admin\ncurrent-context: admin@k8s-cluster-dev-hr4impact\nkind: Config\npreferences: {}\nusers:\n- name: k8s-cluster-dev-hr4impact-admin\n  user:\n    token: jpP4k3gVS3f9F0gfnl8aagoSZRxqylVDOqxoHAWQdE6MABBCqNBZB9u3",
                "host": "https://6b7592d5-47a5-4a2c-89cd-ad6ab90c55c7.api.k8s.fr-par.scw.cloud:6443",
                "token": "jpP4k3gVS3f9F0gfnl8aagoSZRxqylVDOqxoHAWQdE6MABBCqNBZB9u3"
              }
            ],
            "name": "k8s-cluster-dev-hr4impact",
            "open_id_connect_config": [
              {
                "client_id": "",
                "groups_claim": [],
                "groups_prefix": "",
                "issuer_url": "",
                "required_claim": [],
                "username_claim": "",
                "username_prefix": ""
              }
            ],
            "organization_id": "db28676e-35db-4caf-ad4e-91219b4e57de",
            "project_id": "db28676e-35db-4caf-ad4e-91219b4e57de",
            "region": "fr-par",
            "status": "pool_required",
            "tags": [],
            "timeouts": null,
            "type": "kapsule",
            "updated_at": "2022-06-08T11:34:44Z",
            "upgrade_available": false,
            "version": "1.23.6",
            "wildcard_dns": "*.6b7592d5-47a5-4a2c-89cd-ad6ab90c55c7.nodes.k8s.fr-par.scw.cloud"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo5MDAwMDAwMDAwMDAsImRlZmF1bHQiOjkwMDAwMDAwMDAwMCwiZGVsZXRlIjo5MDAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjo5MDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "scaleway_k8s_pool",
      "name": "k8s-pool-hr4impact",
      "provider": "provider[\"registry.terraform.io/scaleway/scaleway\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "autohealing": true,
            "autoscaling": true,
            "cluster_id": "fr-par/6b7592d5-47a5-4a2c-89cd-ad6ab90c55c7",
            "container_runtime": "containerd",
            "created_at": "2022-06-08T11:35:17Z",
            "current_size": 1,
            "id": "fr-par/2f1fe9ab-04a7-4177-9c51-39c888c433a7",
            "kubelet_args": null,
            "max_size": 5,
            "min_size": 1,
            "name": "kapsule-pool-dev-hr4impact",
            "node_type": "dev1_m",
            "nodes": [
              {
                "name": "scw-k8s-cluster-dev-h-kapsule-pool-dev--673352",
                "public_ip": "51.158.68.4",
                "public_ip_v6": "",
                "status": "ready"
              }
            ],
            "placement_group_id": null,
            "region": null,
            "size": 1,
            "status": "ready",
            "tags": null,
            "timeouts": null,
            "updated_at": "2022-06-08T11:39:31Z",
            "upgrade_policy": [
              {
                "max_surge": 0,
                "max_unavailable": 1
              }
            ],
            "version": "1.23.6",
            "wait_for_pool_ready": true,
            "zone": "fr-par-1"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo5MDAwMDAwMDAwMDAsImRlZmF1bHQiOjkwMDAwMDAwMDAwMCwiZGVsZXRlIjo5MDAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjo5MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "scaleway_k8s_cluster.k8s-cluster-hr4impact"
          ]
        }
      ]
    }
  ]
}
